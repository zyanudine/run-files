# 181002_M00662_0252_000000000-C5682
# 3/5/19 cp from Celgene0328-miseq-bwamem-varscan-rover-0252-100418.sh for deciphera pipeline, see also codes/prjts/deciphera_3SNP.sh, but using fastq from basespace to 
#  do bwamem aln without trimming (like Incyte). Celgene use bam from miseq, Incyte use fastq from basespace and do bwamem without trimming, Novartis/Qiagen FLT3 use fastq and 
# do bmwem wt and wto trimmng, BMD use fastq and do bmwem wt trimmng.
# ls /mnt/miseq/Illumina/MiSeqAnalysis/ -ltrh ; 0100 is local miseq run number, AWV1A is flow cell number shared to basesapce
# ls /mnt/win-hp/base_space    to check download folder
# cp from /mnt/win-hp/base_space/ since download fastq from basespace (see 0030, 0044, 0045 etc. for download bam/fastq from bs and cp from /mnt/win-hp/base_space/, or cp from public)
# mkdir -p seqs/181002_M00662_0252_000000000-C5682/fq
# cp -pr /mnt/win-hp/base_space/Incyte_p327_run1-98687754/*/*/*fastq.gz seqs/181002_M00662_0252_000000000-C5682/fq/
# gunzip seqs/181002_M00662_0252_000000000-C5682/fq/*
# 10/2/18 cp from Incyte-miseq-bwamem-varscan-rover-0250-092418.sh,  for Celgene_PROJ0328_01Oct2018_MK, Nextera XT v2, TNFRSF17.AmpliconManifest
#  mainly compute the cov statistics from bam files of Miseq reporter.  Download bam file from 90.60 first, then run, should be ok. Change below accrodlingly.
#  ls seqs/* | grep Alig | sort -u;  to find avaoliable alignment types, make new one Alignment_msr instead Alignment2/3 etc. more reasonable. Manually copy since miseq autocopy not used much now.
# mkdir -p seqs/181002_M00662_0252_000000000-C5682/Alignment_msr
# cp /mnt/miseq/Illumina/MiSeqOutput/181002_M00662_0252_000000000-C5682/Data/Intensities/BaseCalls/Alignment/*+(bam|bai) seqs/181002_M00662_0252_000000000-C5682/Alignment_msr/
# 5/22/17 for Incyte pipeline  # fq no trim, varscan only
# 10/31/16 cp from  Novartis_Myloid_FLT3-ampliseq-miseq-fqnctbwamem-pindel-0044-012816.sh, varscan cov/read/strand change
# ls /mnt/miseq/Illumina/MiSeqAnalysis/ -ltrh ; 0100 is local miseq run number, AWV1A is flow cell number shared to basesapce
# ls /mnt/win-hp/base_space    to check download folder
# 12/14/15 cut fastq, bwamem alignement, varscan , rover
# cp from /mnt/win-hp/base_space/ since download fastq from basespace (see 0030, 0044, 0045 etc. for download bam/fastq from bs and cp from /mnt/win-hp/base_space/, or cp from public)
# mkdir -p seqs/180921_M00662_0250_000000000-C34TB/fq
# cp -pr /mnt/win-hp/base_space/BMD_TruSight_run_16-95021238/*/*/*fastq.gz seqs/180921_M00662_0250_000000000-C34TB/fq/
# gunzip seqs/180921_M00662_0250_000000000-C34TB/fq/*
# basespace bwa use hg19 reference, also not hg19.fasta, use miseq-hg19-genome.fa
# 3/16/15 for ROVER pipeline
# 10/30/15 for pindel pipeline

# 3snp pipeline
------
cdl
dtype=msr_vc+bam_bai  # all, msr_vc,fastq, bam_bai
alg="_fqnctbwamem"
#samples="+(A3107_S21|A3214_S20)*"
samples=all
#samples="+(B10)*"
run=all-but-gatk   # all, varscan, msr
ext=null        #copy folder extension
cptype=all # all, varscan, msr
cpdir=Miseq_deciphera_3snp
project=181002_M00662_0252_000000000-C5682    # change project name
roi=deciphera_3SNP.bed
roi_mergesort=deciphera_3SNP.bed
reffai=miseq-hg19-genome.fa
hotspot=CHP2.20131001.hotspots.bed   # does not matter since pairallelecount=n
pairallelecount=n
gn2NM=NVS_genes_and_refRNA_accession_NM_number.xls   # does not matter for Incyte panel

nohup bash ./codes/Miseq-general-deciphera_3SNP.sh $dtype $project $alg $samples $run $ext $cptype $cpdir $roi $roi_mergesort $reffai $hotspot $pairallelecount \
$gn2NM 2>&1 | nohup tee -a tmp/$project.nohup

# save project name so it can be used later
projectorig=$project

# extract bam for UGT1A1, use chr2, not 2ï¼Œ to new folder seqs/${project}_UGT1A1/Alignment${alg}
--------
pkgs=/host/DATA/ZYAN/WORK/NEXT-GEN-SEQ/packages
seqs_aln=/host/DATA/ZYAN/WORK/NEXT-GEN-SEQ/seqs/${project}/Alignment${alg}
seqs_aln_extr=/host/DATA/ZYAN/WORK/NEXT-GEN-SEQ/seqs/${project}_UGT1A1/Alignment${alg}
mkdir -p $seqs_aln_extr
for x in `ls ${seqs_aln}/*bam | xargs -n1 basename`; do
sample=${x%%.bam}
echo $sample
grep -Fx -f <($pkgs/samtools-0.1.18/samtools view -h $seqs_aln/$sample.bam chr2:234668875-234668875) <($pkgs/samtools-0.1.18/samtools view -h $seqs_aln/$sample.bam chr2:234668900-234668900) | \
$pkgs/samtools-0.1.18/samtools view -hSb - > $seqs_aln_extr/$sample.bam
$pkgs/samtools-0.1.18/samtools index $seqs_aln_extr/$sample.bam $seqs_aln_extr/$sample.bam.bai
done


# UGT1A1 pipline
---------
cdl
dtype=msr_vc+bam_bai  # all, msr_vc,fastq, bam_bai
alg="_fqnctbwamem"
#samples="+(A3107_S21|A3214_S20)*"
samples=all
#samples="+(B10)*"
run=all-but-gatk   # all, varscan, msr
ext=null        #copy folder extension
cptype=all # all, varscan, msr
cpdir=Miseq_deciphera_UGT1A1
project=${projec}_UGT1A1    # change project name
roi=deciphera_UGT1A1.bed
roi_mergesort=deciphera_UGT1A1.bed
reffai=miseq-hg19-genome.fa
hotspot=CHP2.20131001.hotspots.bed   # does not matter since pairallelecount=n
pairallelecount=n
gn2NM=NVS_genes_and_refRNA_accession_NM_number.xls   # does not matter for Incyte panel

nohup bash ./codes/Miseq-general-deciphera_3SNP.sh $dtype $project $alg $samples $run $ext $cptype $cpdir $roi $roi_mergesort $reffai $hotspot $pairallelecount $gn2NM 2>&1 | nohup tee -a tmp/$proj$


# special case, combine and transfer file here since it has 2 pipelines
#---------------------------------
# combine varscan xls (merge_varscan.xls) from 2 pipelines (1) take ABCG2 2 snps from original bam pipeline:4:89061114_C/T, 4:89052323_G/T  (chr2/4 also ok)
# (2) take UGT1A1 ins 2:234668879_C/+AT from extracted bam pipeline.  (3) Combine them and add each sample with no call if not called.

project=$projectorig  # use original name

if [ -z $alg ]; then alg=""; fi
if [ $alg = "null" ]; then alg=""; fi
if [ $samples = 'all' ]; then samples=*; fi

echo "
# combine varscan.xls
"
seqs_aln=/host/DATA/ZYAN/WORK/NEXT-GEN-SEQ/seqs/${project}/Alignment${alg}
outs=/host/DATA/ZYAN/WORK/NEXT-GEN-SEQ/output/${project}/Alignment${alg}
outs1=/host/DATA/ZYAN/WORK/NEXT-GEN-SEQ/output/${project}_UGT1A1/Alignment${alg}
dir=$outs; dir1=$outs1
file=$dir/${project}_merge_varscan.xls; file1=$dir1/${project}_UGT1A1_merge_varscan.xls

rm $dir/${project}_merge_varscan_allsample_3snp_withnocall.xls -f
cat $file | head -1 > $dir/${project}_merge_varscan_allsample_3snp_withnocall.xls
for x in  `ls $seqs_aln/*.bam`
do
 num=`ls $x | grep -o / | wc -l`; num=`expr $num + 1`; x=`ls $x | cut -d/ -f$num`  # get field number, then cut filename
 x=${x%%.bam}
 echo $x
 barcode=`echo $x | cut -d'_' -f2,2`;samp=`echo $x | cut -d'_' -f1,1`
 run=`echo $project | cut -d'_' -f3,3 | sed -e 's/^0*//g' | awk '{print "run"$0}'`
 for snp in "2:234668879_C/+AT"
  do
   echo $snp
   chk=`cat $file1 | grep "$samp" | grep "$snp" | wc -l`
   if(($chk>0)); then cat $file1 | grep "$samp" | grep "$snp" >> $dir/${project}_merge_varscan_allsample_3snp_withnocall.xls; fi
   if(($chk==0)); then echo | awk 'BEGIN{FS=OFS="\t"};{print run"_"barcode"\t"run"\t"barcode"\t"samp"\t"snp"\tnocall"}' run=$run barcode=$barcode samp=$samp snp=$snp \
     >> $dir/${project}_merge_varscan_allsample_3snp_withnocall.xls; fi
  done
 for snp in "4:89052323_G/T" "4:89061114_C/T"
  do
   echo $snp
   chk=`cat $file | grep "$samp" | grep "$snp" | wc -l`
   if(($chk>0)); then cat $file | grep "$samp" | grep "$snp" >> $dir/${project}_merge_varscan_allsample_3snp_withnocall.xls; fi
   if(($chk==0)); then echo | awk 'BEGIN{FS=OFS="\t"};{print run"_"barcode"\t"run"\t"barcode"\t"samp"\t"snp"\tnocall"}' run=$run barcode=$barcode samp=$samp snp=$snp \
     >> $dir/${project}_merge_varscan_allsample_3snp_withnocall.xls; fi
  done
done

# split above file column "Cons:Cov:Reads1:Reads2:Freq:P-value" to get cov and mut freq
Rscript -e " \
xls=read.csv('$dir/${project}_merge_varscan_allsample_3snp_withnocall.xls', sep='\t', head=T, as.is=T, check.names=F, row.names=NULL); xls[xls==T]='T'; dim(xls); \
covfreq=t(apply(xls,1,function(x){a=unlist(strsplit(x['Cons:Cov:Reads1:Reads2:Freq:P-value'],':')); c(a[2],a[5])})); \
xls=cbind(xls[,1:9],Cov=covfreq[,1],freq=covfreq[,2],xls[,10:dim(xls)[2]]); \
write.table(xls,file='$dir/tmp.xls', row.names=F, sep='\t',quote=F, na=''); \
"
mv $dir/tmp.xls $dir/${project}_merge_varscan_allsample_3snp_withnocall.xls


#cp and merge all runs
#-----------------
cptype=all # all, varscan, msr
cpdir=Miseq_deciphera_3snp
dir2=/mnt/win-hp/next_gene_seq_wind/share/$cpdir/$project/Alignment${alg}

if [ $cptype = 'all' ]  #@@@@@@@@@@beg
then
echo "cp all: gatk, varscan, MSR"
dir1=output/${project}/Alignment${alg}
cp $dir1 $dir2/output/ -r
fi

varsum=/mnt/win-hp/next_gene_seq_wind/share/$cpdir/Var_summary_varscan

cp $dir2/output/Alignment${alg}/*merge_varscan_allsample_3snp_withnocall.xls $varsum/
fls=`ls $varsum/*merge_varscan_allsample_3snp_withnocall.xls | grep -v All_runs`
cat $fls | awk 'NR==1{cln=$0; print $0}; NR>1{if($0!=cln)print $0}' > $varsum/All_runs_merge_varscan_allsample_3snp_withnocall.xls

